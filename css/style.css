*,
*::after,
*::before {
    margin: 0;
    padding: 0;
    /* border box zorgt ervoor dat bijvoorbeeld padding bij het elemnt wordt gerekend inplaats van dat het wordt toegevoegd aan een element */
    box-sizing: border-box;
    /* border: 1px red solid; */
}

:root {
    --main-font: 'Open Sans', sans-serif;
    --encrypt-background: #7091F5;
    --font-color: #eee;
    --decrypt-background: #9336B4;
    --key-background: #EC53B0;
    --background: #D7BBF5;
}

html {
    font-size: 62.5%;
}

body {
    font-size: 2rem;
    font-family: var(--main-font);
    min-height: 100vh;
    padding: 4rem;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    gap: 2rem;
    background: var(--background);
}

.encrypt {
    width: 40rem;
    aspect-ratio: 1/0.4;
    background: var(--encrypt-background);
    /* Trekt het element schuin */
    /* transform: skewX(-8deg); */
    clip-path: polygon(0 5%, 100% 0, 85% 100%, 0% 100%);
    animation-name: fromLeft;
    animation-duration: 1s;
    will-change: transform;
}

.encrypt--decrypt {
    background: var(--decrypt-background);
}

.encrypt--key {
    background: var(--key-background);
    animation-name: fromRight;
    backface-visibility: hidden;
}

.encrypt--key .encrypt__input {
    width: 30rem;
    border: none;
}

.encrypt--key .encrypt__body>div {
    border-bottom: 0.3rem solid var(--font-color);
    width: 100%;
}

.encrypt__header {
    height: 40%;
    padding-top: 2rem;
    padding-left: 4rem;
}

.encrypt__heading {
    font-weight: 600;
    font-style: italic;
    font-size: 200%;
    text-transform: uppercase;
    color: var(--font-color);
}

.encrypt__body {
    height: 60%;
    display: flex;
    align-items: flex-end;
    padding-bottom: 2rem;
}

.encrypt__input {
    width: 100%;
    height: auto;
    background: none;
    outline: none;
    border: none;
    padding-left: 4rem;
    padding-bottom: 1rem;
    font-size: 80%;
    color: var(--font-color);
    border-bottom: 0.3rem solid var(--font-color);
}

@keyframes fromLeft {
    from {
        transform: translateX(-2rem);
        opacity: 0;
    }

    to {
        transform: translateX(0);
        opacity: 1;
    }
}

@keyframes fromRight {
    from {
        transform: translateX(2rem);
        opacity: 0;
    }

    to {
        transform: translateX(0);
        opacity: 1;
    }
}